- For managing table related to each other
- Relationships are defined as methods on Eloquent model classes

-> One to One:
    - hasOne method is available to your model via the model's Illuminate\Database\Eloquent\Model base class :
        For example,
        {
            return $this->hasOne(Model_class,'foreign_key','local_key')  
        }
    - inverse of the relationship:
        {
            return $this->belongsTo(Model::class,'foreign_key','owner_key')
        }
-> One to Many:
    For example,
        {
            return $this->hasMany(Model::class,'foreign_key','local_key');
        }
    - with query: return Model::find(1)->where(condition)->first()
-> One To Many (Inverse) / Belongs To
    - return $this->belongsTo(ParentModel::class,'foreign_key','owner_key')
    - Default Models : withDefault() allow you to define a default model that will be returned if the given relationship is null
    - return Model::whereBelongsTo($user,<relationShipName>)->get();